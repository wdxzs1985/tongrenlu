<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="info.tongrenlu.mapper.OrderItemMapper">
    
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO m_order_item(
        <trim suffixOverrides=",">
           user_id,
           order_id,
           title,
           url,
           shop,
           price,
           quantity,
           exchange_rate,
           fee,
           status,
           create_date,
        </trim>
        ) VALUES (
        <trim suffixOverrides=",">
           #{userBean.id},
           #{orderBean.id},
           #{title},
           #{url},
           #{shop},
           #{price},
           #{quantity},
           #{exchangeRate},
           #{totalFee},
           0,
           current_timestamp,
        </trim>
        )
    </insert>
    
    <select id="fetchList" resultType="OrderItemBean">
        select
        <trim suffixOverrides=",">
            m_order_item.id,
            m_order_item.title,
            m_order_item.url,
            m_order_item.shop,
            m_order_item.price,
            m_order_item.quantity,
            m_order_item.exchange_rate  as "exchangeRate",
            m_order_item.fee,
            m_order_item.fee            as totalFee,
            m_order_item.status,
            m_order_item.create_date    as createDate,
            m_order_item.order_date     as orderDate,
            m_order_item.receive_date   as receiveDate,
            m_order.id                  as "orderBean.id",
            m_order.title               as "orderBean.title",
            v_user.id                   as "userBean.id",
            v_user.nickname             as "userBean.nickname",
        </trim>
        from
            m_order_item
        join m_order on m_order_item.order_id = m_order.id
        join v_user on m_order_item.user_id = v_user.id
        <where>
            m_order_item.order_id = #{orderBean.id}
        and m_order_item.del_flg = 0
        </where>
    </select>
    
    <select id="findStockItemList" resultType="OrderItemBean">
        select
        <trim suffixOverrides=",">
            m_order_item.id,
            m_order_item.title,
            m_order_item.url,
            m_order_item.shop,
            m_order_item.price,
            m_order_item.quantity,
            m_order.id                  as "orderBean.id",
            m_order.title               as "orderBean.title",
            v_user.id                   as "userBean.id",
            v_user.nickname             as "userBean.nickname",
        </trim>
        from
            m_order_item
        join m_order on m_order_item.order_id = m_order.id
        join v_user on m_order_item.user_id = v_user.id
        <where>
            m_order.status = 2
        and m_order.shopper_id = #{shopperBean.id}
        and m_order_item.status = 0
        and m_order_item.del_flg = 0
        </where>
        order by m_order_item.title
    </select>
    
    <update id="update">
        update
            m_order_item
        <set>
            title = #{title},
            url = #{url},
            shop = #{shop},
            price = #{price},
            quantity = #{quantity},
            exchange_rate = #{exchangeRate},
            fee = #{fee},
            <if test="orderBean != null">
                m_order_item.order_id = #{orderBean.id}
            </if>
        </set>
        <where>
            id = #{id}
        </where>
    </update>
    
    <update id="updateStatus">
        update
            m_order_item
        <set>
            m_order_item.status = #{status},
            <choose>
                <when test="status == 1">
                  m_order_item.order_date = current_timestamp
                </when>
                <when test="status == 2">
                  m_order_item.receive_date = current_timestamp
                </when>
            </choose>
        </set>
        <where>
        <if test="orderItemId != null">
            m_order_item.id = #{orderItemId}
        </if>
        <if test="orderId != null">
            m_order_item.order_id = #{orderId}
        </if>
        </where>
    </update>
    
    <update id="delete">
        update
            m_order_item
        <set>
            del_flg = 1,
        </set>
        <where>
        <if test="orderItemId != null">
            id = #{orderItemId}
        </if>
        <if test="orderId != null">
            order_id = #{orderId}
        </if>
        </where>
            
    </update>
</mapper>