<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="info.tongrenlu.persistence.MCommentMapper">
    
    <cache flushInterval="3600"/>
    
    <insert id="insert" flushCache="true">
        INSERT INTO M_ARTICLE_COMMENT(
            COMMENT_ID
        ,   CONTENT
        ,   SENDER_USER_ID
        ,   ARTICLE_ID
        ,   ADD_DATE
        ,   UPD_DATE
        ,   DEL_FLG
        ) VALUES (
            #{commentId}
        ,   #{content}
        ,   #{sender.userId}
        ,   #{articleBean.articleId}
        ,   SYSDATE
        ,   SYSDATE
        ,   '0'
        )
    </insert>
    
    <select id="count" resultType="int">
        SELECT
            COUNT(C.COMMENT_ID)
        FROM
            M_ARTICLE_COMMENT C
        ,   M_USER SENDER
        ,   M_ARTICLE A
        WHERE
            C.ARTICLE_ID = A.ARTICLE_ID (+)
        AND C.SENDER_USER_ID = SENDER.USER_ID (+)
        AND C.DEL_FLG = '0'
        AND C.ARTICLE_ID = #{articleBean.articleId}
    </select>
    
    <select id="getArticleCommentList" resultType="ArticleCommentBean">
        SELECT
            *
        FROM
            (SELECT
                C.COMMENT_ID        as commentId
            ,   C.CONTENT           as content
            ,   C.ADD_DATE          as addDate
            ,   SENDER.USER_ID      as "sender.userId"
            ,   SENDER.NICKNAME     as "sender.nickname"
            ,   A.ARTICLE_ID        as "articleBean.articleId"
            ,   A.TITLE             as "articleBean.title"
            ,   ROW_NUMBER() OVER (ORDER BY C.COMMENT_ID DESC) as RNUM
            FROM
                M_ARTICLE_COMMENT C
            ,   M_USER SENDER
            ,   M_ARTICLE A
            WHERE
                C.ARTICLE_ID = A.ARTICLE_ID (+)
            AND C.SENDER_USER_ID = SENDER.USER_ID (+)
            AND C.DEL_FLG = '0'
            AND C.ARTICLE_ID = #{articleBean.articleId})
        WHERE
            RNUM BETWEEN #{start} AND #{end}
        ORDER BY RNUM
    </select>
    
    <insert id="insertUserComment" flushCache="true">
        INSERT INTO M_USER_COMMENT(
            COMMENT_ID
        ,   CONTENT
        ,   SENDER_USER_ID
        ,   USER_ID
        ,   ADD_DATE
        ,   UPD_DATE
        ,   DEL_FLG
        ) VALUES (
            #{commentId}
        ,   #{content}
        ,   #{sender.userId}
        ,   #{userBean.userId}
        ,   SYSDATE
        ,   SYSDATE
        ,   '0'
        )
    </insert>
    
    <select id="getUserCommentCount" resultType="int">
        SELECT
            COUNT(C.COMMENT_ID)
        FROM
            M_USER_COMMENT C
        ,   M_USER SENDER
        ,   M_USER U
        WHERE
            C.USER_ID = U.USER_ID (+)
        AND C.SENDER_USER_ID = SENDER.USER_ID (+)
        AND C.DEL_FLG = '0'
        AND C.USER_ID = #{userBean.userId}
    </select>
    
    <select id="getUserCommentList" resultType="UserCommentBean">
        SELECT
            *
        FROM
            (SELECT
                C.COMMENT_ID        as commentId
            ,   C.CONTENT           as content
            ,   C.ADD_DATE          as addDate
            ,   U.USER_ID           as "userBean.userId"
            ,   U.NICKNAME          as "userBean.nickname"
            ,   SENDER.USER_ID      as "sender.userId"
            ,   SENDER.NICKNAME     as "sender.nickname"
            ,   ROW_NUMBER() OVER (ORDER BY C.COMMENT_ID DESC) as RNUM
            FROM
                M_USER_COMMENT C
            ,   M_USER U
            ,   M_USER SENDER
            WHERE
                C.USER_ID = U.USER_ID (+)
            AND C.SENDER_USER_ID = SENDER.USER_ID (+)
            AND C.DEL_FLG = '0'
            AND C.USER_ID = #{userBean.userId})
        WHERE
            RNUM BETWEEN #{start} AND #{end}
        ORDER BY RNUM
    </select>
</mapper>